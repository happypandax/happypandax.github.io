Contributing
#######################################

There are numerous of ways to contribute to HPX.

- You can create a plugin for HPX, see how to :ref:`here <Plugins>`.
- You can create a frontend in your favorite language, see how to :ref:`here <Creating frontends>`.
- You can help with misc. things like *helping answering issues on Github*, *fixing spelling mistakes*, etc. 

If you want to start contributing to the HPX core parts, you will need to set up the right
environment and follow some simple guidelines. I appreciate any help.

Editing the documentation
#######################################

The documentation is written in reStructuredText and is generated with Sphinx.
See `reStructuredText Primer <http://www.sphinx-doc.org/en/stable/rest.html#>`_ for an introduction.

To edit the documentation, start by `forking <https://github.com/happypandax/happypandax/>`_ the **main** repo.

The relevant source files are resided at ``docs/source``. Everything else in the docs folder is generated by Sphinx and should be ignored.
Edit the ``.rst`` files and then when done and satisfied, build the docs with ``python3 bootstrap.py build --docs``.

Note that not everything written in the documentation can be found at ``docs/source``. Some is also written in their respective python file.
For example, most of the :ref:`Server API` is written in the python files at ``happypanda/interface``.
Where possible, prefer writing in the relevant python files over the files at ``docs/source``. This makes it easier to manage.

After you're done editing the documentation, you can commit the changes. Don't worry, everything in the ``docs/`` folder except ``docs/source`` will be ignored by git so you can commit without worry.

Now that you have committed your changes, you can create a PR on github and it'll be merged into the main repo!
The live documentation found on github is updated automatically on deployment.
